apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    signingConfigs {
        debug {
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
        }
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            // Enabling multidex support.
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    compile project(':domain')
    compile project(':model')

    compile appDependencies.androidAppCompat
    compile appDependencies.androidDesign
    compile appDependencies.androidSupport
    compile appDependencies.androidRecyclerView
    compile appDependencies.androidCardView
    compile appDependencies.androidMultidex
    compile appDependencies.googlePlayServices
    compile appDependencies.googleMapsUtils
    compile appDependencies.okHttp
    compile appDependencies.gson
    apt appDependencies.daggerCompiler
    compile appDependencies.dagger
    compile appDependencies.butterKnife
    compile appDependencies.rxJava
    compile appDependencies.rxAndroid
    provided appDependencies.javaxAnnotation
    compile appDependencies.viewPagerIndicator
    compile appDependencies.roundedImageView
    compile appDependencies.crashlytics
    compile appDependencies.retrofit
    compile appDependencies.retrofitConvGson
    compile appDependencies.retrofitAdapRxJava
    compile appDependencies.rxFit
    compile appDependencies.rxGoogleMaps

    //Development
    //compile developmentDependencies.leakCanary
}
